<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:SubstandardApp.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ic="using:FluentIcons.Avalonia"
        xmlns:asyncImageLoader="clr-namespace:AsyncImageLoader;assembly=AsyncImageLoader.Avalonia"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="SubstandardApp.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/avalonia-logo.ico"
        Title="Substandard"
        RequestedThemeVariant="Dark">
    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <vm:MainWindowViewModel />
    </Design.DataContext>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="Light">
                    <SolidColorBrush x:Key="HeaderBarBackgroundBrush">#f2f2f2</SolidColorBrush>
                </ResourceDictionary>
                <ResourceDictionary x:Key="Dark">
                    <SolidColorBrush x:Key="HeaderBarBackgroundBrush">#171717</SolidColorBrush>
                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Grid ColumnDefinitions="300,*,4,250">
        <DockPanel Grid.Column="0">
            <asyncImageLoader:AdvancedImage HorizontalAlignment="Left"
                                            VerticalAlignment="Top"
                                            Stretch="Uniform"
                                            Source="{Binding NowPlaying.PlayingArtUrl}"
                                            Loader="{Binding ImageLoader}"
                                            DockPanel.Dock="Top"/>
            
            <Grid DockPanel.Dock="Bottom">
                <StackPanel VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            Margin="0,0,0,45">
                    <Label Content="{Binding NowPlaying.CurrentSong.Title}"
                           HorizontalContentAlignment="Center"
                           FontWeight="Bold"
                           FontSize="16"/>
                    <Label Content="{Binding NowPlaying.CurrentSong.ArtistName}"
                           HorizontalContentAlignment="Center"/>
                    <Label Content="{Binding NowPlaying.CurrentSong.AlbumName}"
                           HorizontalContentAlignment="Center"/>
                </StackPanel>
                
                <Grid VerticalAlignment="Bottom"
                      Margin="0,0,0,20"
                      ColumnDefinitions="*,*,*,*">
                    <Button Grid.Column="0"
                            Command="{Binding PausePlayCommand}"
                            Content="{Binding PausePlayText}"/>
                    <Button Grid.Column="1"
                            Command="{Binding PreviousSongCommand}">Previous</Button>
                    <Button Grid.Column="2"
                            Command="{Binding NextSongCommand}">Next</Button>
                    <Button Grid.Column="3">
                        <Button.Flyout>
                            <MenuFlyout>
                                <MenuItem Header="Toggle Heart"/>
                                <MenuItem Header="Go to Artist"
                                          Command="{Binding GoToArtist}"/>
                                <MenuItem Header="Go to Album"
                                          Command="{Binding GoToAlbum}"/>
                                <MenuItem Header="Show Info"/>
                                <MenuItem Header="Share"/>
                                <MenuItem Header="Fix Playback"
                                          Command="{Binding FixPlayback}"/>
                            </MenuFlyout>
                        </Button.Flyout>
                        Menu
                    </Button>
                </Grid>
                
                <Grid VerticalAlignment="Bottom"
                      ColumnDefinitions="50,*,50">
                    <Label Grid.Column="0" 
                           Content="{Binding PlaybackSecondsString}"
                           HorizontalAlignment="Center"/>
                    <Slider Name="Seekbar" 
                            Grid.Column="1" 
                            Value="{Binding NowPlaying.PlaybackSeconds}"
                            Maximum="{Binding NowPlaying.PlaybackMaxSeconds}"
                            ValueChanged="Seekbar_OnValueChanged">
                    </Slider>
                    <Label Grid.Column="2" 
                           Content="{Binding PlaybackMaxSecondsString}"
                           HorizontalAlignment="Center"/>
                </Grid>
            </Grid>
        </DockPanel>
        
        <TabControl Grid.Column="1" ItemsSource="{Binding Tabs}"
                    SelectedIndex="{Binding TabSelectedIndex}">
            <TabControl.ItemTemplate>
                <DataTemplate>
                    <Grid Height="18">
                        <TextBlock Text="{Binding Header}" 
                                   Margin="2,2,29,2"
                                   FontSize="12"
                                   Padding="0"/>
                        <Button HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Padding="0" 
                                Height="20" 
                                HorizontalContentAlignment="Center"
                                VerticalContentAlignment="Center"
                                Command="{Binding $parent[TabControl].((vm:MainWindowViewModel)DataContext).CloseTab}"
                                CommandParameter="{Binding}">âœ—</Button>
                    </Grid>
                </DataTemplate>
            </TabControl.ItemTemplate>
            <TabControl.ContentTemplate>
                <DataTemplate DataType="vm:TabItemViewModel">
                    <ContentControl Content="{Binding Content}" />
                </DataTemplate>
            </TabControl.ContentTemplate>
        </TabControl>
        <GridSplitter Grid.Column="2"/>
        <Grid Grid.Column="3" RowDefinitions="*,4,250">
            <DockPanel Grid.Row="0">
                <StackPanel DockPanel.Dock="Top">
                    <Button>
                        <Button.Flyout>
                            <MenuFlyout>
                                <MenuItem Header="Refresh Playlists"
                                          Command="{Binding SyncPlaylists}"/>
                                <MenuItem Header="Scan Library"
                                          Command="{Binding ScanLibrary}"/>
                                <MenuItem Header="Settings"
                                          Command="{Binding OpenSettings}"/>
                            </MenuFlyout>
                        </Button.Flyout>
                        Configuration
                    </Button>
                    <TextBox Watermark="Search Library..."/>
                </StackPanel>
                
                <TreeView x:Name="PlaylistTreeView" 
                          DoubleTapped="PlaylistTreeView_OnDoubleTapped"
                          AutoScrollToSelectedItem="False"
                          ItemsSource="{Binding PlaylistNodes}">
                    <TreeView.ItemTemplate>
                        <TreeDataTemplate ItemsSource="{Binding SubNodes}">
                            <TextBlock Text="{Binding Title}"/>
                        </TreeDataTemplate>
                    </TreeView.ItemTemplate>
                </TreeView>
            </DockPanel>
            
            <GridSplitter Grid.Row="1"/>
            <TabControl Grid.Row="2">
                <TabItem Header="{Binding QueueBoxHeader}">
                    <ListBox x:Name="QueueBox" 
                             Grid.Row="2" 
                             ItemsSource="{Binding QueueModel.Queue}"
                             PointerReleased="QueueBox_OnPointerReleased">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Tag="{Binding}"
                                            Background="Transparent">
                                    <Label Content="{Binding Title}"/>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </TabItem>
                <TabItem Header="{Binding HistoryBoxHeader}">
                    <ListBox ItemsSource="{Binding QueueModel.QueueHistory}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Tag="{Binding}"
                                            Background="Transparent">
                                    <Label Content="{Binding Title}"/>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </TabItem>
            </TabControl>
        </Grid>
    </Grid>
</Window>